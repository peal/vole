@Chapter Setting up Vole
@ChapterLabel install

This chapter contains instructions for getting &Vole; up and running.

@BeginChunk contact
If you encounter problems, or have any other feedback for the authors, then
please
<URL>
  <Link>&VoleIssues;</Link>
  <LinkText>create an issue on our issue tracker</LinkText>
</URL>,
or contact us by any other appropriate means.  See the
title page of this
manual for our contact details.  We published &Vole; so that our ideas and
algorithms could be used by, and be useful to, others in the community. But
without feedback, it can be difficult to know whether we are achieving this aim.
Therefore we are keen to hear your comments, remarks, and complaints.
@EndChunk

@InsertChunk contact


@Section Dependencies
@SectionLabel deps

&Vole; requires &GAP; &GAPVersion; or newer and various other &GAP;
packages to run, and Rust version &RustVersion; or newer is required to
compile &Vole;.

@BeginChunk CygwinSkip
Please note that if you are using &Vole; via a &GAP; Cygwin release
(i.e. if you installed &GAP; in Windows via an installer that included &Vole;),
then &Vole; came ready-compiled, and the included versions of &GAP; and its
packages are sufficient to run &Vole; out-of-the-box.
Therefore you may skip straight to Section&nbsp;<Ref Sect="Section_loading"/>.
@EndChunk
@InsertChunk CygwinSkip

In order to compile &Vole;, Rust must be installed and available with the
`cargo` command, in version at least &RustVersion;.
You can test for Rust by running `cargo --version` in the terminal. You should
obtain a version number in response, such as:
@BeginLogSession
$ cargo --version
cargo 1.57.0
@EndLogSession
If Rust is not available, then running the command `cargo --version` will give
an error such as `cargo: command not found`. If this is the case, then please
follow the instructions at <URL>https://www.rust-lang.org/tools/install</URL>
or <URL>https://rustup.rs</URL> for installing Rust.

In addition, the following &GAP; packages must be available in order to use
&Vole;.  This means that &Vole; will not load if one or more of these packages
cannot be loaded in your &GAP; installation in a new enough version.
* <URL>
    <Link>https://digraphs.github.io/Digraphs</Link>
    <LinkText>&Digraphs;</LinkText>
  </URL>
  version &DigraphsVersion;, or newer
  <Cite Key="Digraphs"/>.
* <URL>
    <Link>https://gap-packages.github.io/io</Link>
    <LinkText>&IO;</LinkText>
  </URL>
  version &IOVersion;, or newer
  <Cite Key="IO"/>.
* <URL>
    <Link>https://gap-packages.github.io/datastructures</Link>
    <LinkText>&datastructures;</LinkText>
  </URL>
  version &datastructuresVersion;, or newer
  <Cite Key="datastructures"/>.
* <URL>
    <Link>https://gap-packages.github.io/json</Link>
    <LinkText>&json;</LinkText>
  </URL>
  version &jsonVersion;, or newer
  <Cite Key="json"/>.

These packages, and &GAP; itself, in turn have their own dependencies, and so
&Vole; inherits these additional dependencies.
If one of the above packages does not load in your &GAP; installation,
then please consult the documentation for that package in order to resolve
the problem.

The following &GAP; packages are necessary to use a small, non-core subset of
&Vole;'s features, and are therefore optional.
* <URL>
    <Link>https://github.com/gap-packages/OrbitalGraphs</Link>
    <LinkText>&OrbitalGraphs;</LinkText>
  </URL> version &OrbitalGraphsVersion;, or newer
  (required for <Ref Func="Vole.TwoClosure"/>).

The following &GAP; packages are needed to run &Vole;'s test suite, but they are
not required to use the rest of &Vole;, and are therefore also optional.
* <URL>
    <Link>https://github.com/ChrisJefferson/QuickCheck</Link>
    <LinkText>&QuickCheck;</LinkText>
  </URL> version &QuickCheckVersion;, or newer.
* <URL>
    <Link>https://gap-packages.github.io/ferret</Link>
    <LinkText>&ferret;</LinkText>
  </URL> version &ferretVersion;, or newer
  <Cite Key="ferret"/>.

See Section&nbsp;<Ref Sect="Section_tests"/> for more information about
running the tests included in &Vole;.

In order to compile the &Vole; documentation,
<URL>
  <Link>https://gap-packages.github.io/AutoDoc</Link>
  <LinkText>&AutoDoc;</LinkText>
</URL> version &AutoDocVersion; or newer must be available.
This step is usually unnecessary, and is not required in order to use &Vole;.
See Section&nbsp;<Ref Sect="Section_compiling_manual"/> for more information
about compiling the documentation.


@Section Installing &Vole;
@SectionLabel install

@InsertChunk CygwinSkip

Otherwise, if you do not yet have a copy of &Vole;, you should download the
latest version of &Vole;.

If you have the
<URL>
  <Link>https://gap-packages.github.io/PackageManager</Link>
  <LinkText><Package>PackageManager</Package></LinkText>
</URL>
package installed, then you should be able to use it to download and compile
&Vole;. Please consult
<URL>
  <Link>https://gap-packages.github.io/PackageManager/doc/chap0_mj.html</Link>
  <LinkText>the <Package>PackageManager</Package> documentation</LinkText>
</URL>
for full instructions of how to do this,
but the commands should look something like:
@BeginLogSession
gap> # Warning: this won't work until PackageManager has been taught about Vole!
gap> LoadPackage("PackageManager");
gap> InstallPackage("vole");
gap> CompilePackage("vole");
@EndLogSession
If this succeeds, you may skip to Section&nbsp;<Ref Sect="Section_loading"/>.

Alternatively, you can manually download the latest `.tar.gz` &Vole; archive from
<URL>
  <Link>&VoleWWW;</Link>
  <LinkText>the &Vole; website</LinkText>
</URL>
and extract the archive into your &GAP; installation's <F>pkg</F> subdirectory.
The commands to achieve this may look something like:
@BeginLogSession
$ cd ~/gap/pkg
$ curl -O https://github.com/peal/vole/releases/download/vX.Y.Z/vole-X.Y.Z.tar.gz
$ tar xf vole-X.Y.Z.tar.gz
@EndLogSession

In order to compile &Vole;, change to your &Vole; directory and run `make`.
This should look something like:
@BeginLogSession
$ cd ~/gap/pkg/vole-X.Y.Z
$ make
cd rust && cargo build --bins && cargo build --release --bins
    [...
        potentially copious output omitted here
                                               ...]
    Compiling rust-vole v0.1.1
    Finished dev [unoptimized + debuginfo] target(s) in 8.93s
    Compiling rust-vole v0.1.1
    Finished release [optimized + debuginfo] target(s) in 30.06s
@EndLogSession

&Vole; should now be ready to load.
See Section&nbsp;<Ref Sect="Section_loading"/>.


@Section Loading &Vole;
@SectionLabel loading

If &Vole; is available to load, then it can be loaded by
calling the function <Ref Func="LoadPackage" BookName="Ref"/>
with the argument `"vole"`,
from within the relevant &GAP; installation. This should return <K>true</K>.

@BeginExampleSession
gap> LoadPackage("vole", false);
true
@EndExampleSession

If `LoadPackage` instead returns <K>fail</K>, then &Vole; has failed to load.
This is probably because &GAP; cannot find &Vole; or &Vole; is not compiled
(Section&nbsp;<Ref Sect="Section_install"/>), or one of the dependencies of
&Vole; is not available (Section&nbsp;<Ref Sect="Section_deps"/>).
If &Vole; fails to load, then please see the
<Ref Func="LoadPackage" BookName="ref"/>
documentation for ways to help diagnose the problem further.

@InsertChunk contact

Otherwise, &Vole; is ready to use. To reassure yourself, you can quickly test
that &Vole; is behaving as intended by quickly running a search, such that the
following one:

@BeginExampleSession
gap> A4 := AlternatingGroup(4);
Alt( [ 1 .. 4 ] )
gap> D8 := DihedralGroup(IsPermGroup, 8);
Group([ (1,2,3,4), (2,4) ])
gap> Vole.Intersection(A4, D8) = Group([ (1,2)(3,4), (1,4)(2,3) ]);
true
@EndExampleSession

If you wish to test your &Vole; installation more thoroughly, please see
Section&nbsp;<Ref Sect="Section_tests"/>.


@Section Running &Vole;'s test suite
@SectionLabel tests

Optionally, if you wish to thoroughly test your &Vole; installation, then you
can run the test suite.  As well the dependencies of &Vole; itself, the test
suite requires the &GAP; packages
<URL>
  <Link>https://gap-packages.github.io/ferret</Link>
  <LinkText>&ferret;</LinkText>
</URL>
(version &ferretVersion; or newer)
and
<URL>
  <Link>https://github.com/ChrisJefferson/QuickCheck</Link>
  <LinkText>&QuickCheck;</LinkText>
</URL>
(version &QuickCheckVersion; or newer) to be available.

There are two files that can be invoked to run extesive tests of &Vole;:
<F>run-tests.sh</F> and <F>tst/testall.g</F>.

The <F>run-tests.sh</F> script, which is located in the root directory of
&Vole;, begins by testing the Rust component directly,
and then it tests the &GAP;-level interface to the Rust component.
This script requires that the command `gap`,
in your terminal environment,
is set up to load the appropriate version of &GAP; for &Vole;.

@BeginLogSession
$ ./run-tests.sh
@EndLogSession

To run only the &GAP;-level tests, please read the file <F>testall.g</F> of
&Vole;'s <F>tst</F> directory into &GAP;.
@BeginLogSession
gap> Read("tst/testall.g");
@EndLogSession


@Section Compiling the documentation for &Vole;
@SectionLabel compiling_manual

Released versions of &Vole; are distributed with precompiled documentation, so
compiling the documentation should be an unnecessary for most users.  However,
development versions of &Vole; do not include precompiled documentation.

To compile the manual, it suffices to read &Vole;'s <F>makedoc.g</F> file into
&GAP;.

This can be done directly within &GAP; via the function
<Ref Oper="Read" BookName="Ref" Style="Number"/>:

@BeginLogSession
gap> Read("makedoc.g");
@EndLogSession

Alternatively, the <F>makedoc.g</F> file can be read into &GAP; by giving its
path as an argument to &GAP;.

@BeginLogSession
$ gap makedoc.g
@EndLogSession

Finally, running `make doc` in the &Vole; directory should compile the
documentation of &Vole; if &Vole; is installed in the <F>pkg</F> subdirectory
of the appropriate &GAP; installation.

@BeginLogSession
$ make doc
@EndLogSession
