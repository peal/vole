name: Windows

on:
  workflow_dispatch:
  schedule:
    # Every Monday at 2:30 AM UTC
    - cron: '30 2 * * 1'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ startsWith(github.ref, 'refs/pull/') }}

jobs:
  # The Cygwin job
  cygwin:
    name: Cygwin / GAP master
    runs-on: windows-latest
    if: ${{ !(github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name == github.repository) }}
    strategy:
      fail-fast: false

    defaults:
      run:
        shell: C:\cygwin64\bin\bash.exe --login -o igncr '{0}'

    env:
      CHERE_INVOKING: 1

    steps:
      - uses: actions/checkout@v2
      - name: "Set git to use UNIX-style line endings"
        shell: bash
        run: |
           git config --global core.autocrlf false
           git config --global core.eol lf
      - name: "Install Cygwin"
        uses: gap-actions/setup-cygwin@master
      - name: "Set up rust"
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: "Build the rust component of Vole"
        run: cd rust && cargo build --release --all-features
      - name: "Run the rust tests for Vole"
        run: cd rust && cargo test --release -q
      - name: "Clone GAP"
        uses: actions/checkout@v2
        with:
          repository: gap-system/gap
          ref: master
          path: gapdev
      - name: "Build GAP and make bootstrap-pkg-full"
        run: |
          cd gapdev
          ./autogen.sh
          ./configure
          make -j4
          make bootstrap-pkg-full WGET="wget -N --no-check-certificate --tries=5 --waitretry=5 --retry-connrefused"
      - name: "Clone OrbitalGraphs"
        uses: actions/checkout@v2
        with:
          repository: gap-packages/OrbitalGraphs
          path: gapdev/pkg/OrbitalGraphs
      - name: "Clone QuickCheck"
        uses: actions/checkout@v2
        with:
          repository: ChrisJefferson/QuickCheck
          path: gapdev/pkg/QuickCheck
      - name: "Clone BacktrackKit"
        uses: actions/checkout@v2
        with:
          repository: peal/BacktrackKit
          path: gapdev/pkg/BacktrackKit
      - name: "Clone GraphBacktracking"
        uses: actions/checkout@v2
        with:
          repository: peal/GraphBacktracking
          path: gapdev/pkg/GraphBacktracking
      - name: "Compile various GAP packages"
        run: |
          cd gapdev/pkg
          for pkg in "datastructures" "digraphs" "ferret" "io" "json" "orb" "profiling"; do
              ../bin/BuildPackages.sh --strict $pkg*
          done
      - name: "Run GAP tests for Vole"
        run: |
          mkdir -p gaproot/pkg/
          ln -f -s $PWD gaproot/pkg/
          GAP="$PWD/gapdev/bin/gap.sh -l $PWD/gaproot; --quitonbreak"
          $GAP tst/testall.g
      - name: "Setup tmate session"
        uses: mxschmitt/action-tmate@v3
        if: ${{ failure() }}
        timeout-minutes: 15
